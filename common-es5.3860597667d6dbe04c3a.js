(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{AdnX:function(t,e,n){"use strict";n.d(e,"a",(function(){return u})),n.d(e,"b",(function(){return c})),n.d(e,"c",(function(){return a}));var o=n("mrSG"),r=n("Ip0R"),i=n("CcnG"),c=function(){return function(){}}(),u=function(){function t(t,e,n,o,c){var u=this;this.config=t,this.platformId=e,this.router=n,this.rendererFactory=o,this.document=c,Object(r.u)(this.platformId)&&(this.renderer2=this.rendererFactory.createRenderer(this.document,{id:"-1",encapsulation:i.Q.None,styles:[],data:{}}),t&&t.updateOnRouterChange?this.router.events.subscribe((function(t){u.update()})):Object(i.X)()&&console.warn("\n      Common practice in single page applications is to update whenever the route changes.\n      ng-intercom supports this functionality out of the box just set 'updateOnRouterChange' to true in your Intercom Module config.\n       This warning will not appear in production, if you choose not to use router updating.\n     "))}return t.prototype.boot=function(t){var e=this;if(Object(r.u)(this.platformId)){var n=t.app_id?t.app_id:this.config.appId;this.loadIntercom(this.config,(function(r){var i=Object(o.a)({},t,{app_id:n});return e._callIntercom("boot",i)}))}},t.prototype.shutdown=function(){return this._callIntercom("shutdown")},t.prototype.update=function(t){return this._callIntercom("update",t)},t.prototype.hide=function(){return this._callIntercom("hide")},t.prototype.show=function(t){return t?this.showNewMessage(t):this._callIntercom("show")},t.prototype.showMessages=function(){return this._callIntercom("showMessages")},t.prototype.showNewMessage=function(t){return this._callIntercom("showNewMessage",t)},t.prototype.trackEvent=function(t,e){return this._callIntercom("trackEvent",t,e)},t.prototype.getVisitorId=function(){return this._callIntercom("getVisitorId")},Object.defineProperty(t.prototype,"visitorId",{get:function(){return this._callIntercom("getVisitorId")},enumerable:!0,configurable:!0}),t.prototype.onShow=function(t){return this._callIntercom("onShow",t)},t.prototype.onHide=function(t){return this._callIntercom("onHide",t)},t.prototype.onUnreadCountChange=function(t){return this._callIntercom("onUnreadCountChange",t)},t.prototype.startTour=function(t){return this._callIntercom("startTour",t)},t.prototype._callIntercom=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Object(r.u)(this.platformId))return window.Intercom?window.Intercom.apply(window,Object(o.i)([t],e)):void 0},t.prototype.injectIntercomScript=function(t,e){if(Object(r.u)(this.platformId)){window.intercomSettings=t;var n=this.document.createElement("script");n.type="text/javascript",n.async=!0,n.src="https://widget.intercom.io/widget/"+this.id,n.attachEvent?n.attachEvent("onload",e):n.addEventListener("load",e,!1),this.renderer2&&this.renderer2.appendChild&&this.renderer2.appendChild(this.document.head,n),window.Intercom("update",t)}},t.prototype.loadIntercom=function(t,e){if(Object(r.u)(this.platformId)){this.id=t.appId;var n=window,o=n.Intercom;if(n.intercomSettings=t,"function"==typeof o)o("reattach_activator"),o("update",t),e();else{var i=function(){i.c(arguments)};i.q=[],i.c=function(t){i.q.push(t)},n.Intercom=i,this.injectIntercomScript(t,e)}}},t}(),a=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[u,{provide:c,useValue:e}]}},t}()}}]);